" enter in the current millenium
set nocompatible

" colors are on this season
syntax enable

" using vim natural plugins (and maybe more)
filetype plugin on

" fuzzy finder: use to find fils on vim
set path+=**
" NOW WE CAN
" - Hit the <tab>  to :find by partial match
" - Use regex to make it fuzzy

" THINGS TO CONSIDER
" - :b lets you autocomplete any open 

" tags: creates a tags file to find references
" tags dependes on: ctags
command! MakeTags !ctags -R .
" NOW WE CAN USE
" - use  ^] to jump to tag under cursor
" - use g^] for ambiguos tags
" - use  ^t to jump back to tag stack

" autocomplete: used to autocomplete based on several information, such as
" tags file, the current file, some know stuff about a certain language, ...
" NOW WE CAN
" - ^n to suggest completation based pn any know stuff
" - ^x^n to suggest from only the current file
" - ^x^] to suggest from tags file
" - ^x^f for paths names (works great with the path trick)
"
" THINGS TO CONSIDER
" - use ^n and ^p to go back and forward on suggestions
" - no need to do any extra command
" - vim already know how to read tags and know some stuff about languages


" function to find the cursor
noremap <C-K> :call HighlightNearCursor()<CR>
function HighlightNearCursor()
  if !exists("s:highlightcursor")
    match Todo /\k*\%#\k*/
    let s:highlightcursor=1
  else
    match None
    unlet s:highlightcursor
  endif
endfunction
" NOW WE CAN
" - ^K to find the cursor
"
" THINGS TO CONSIDER
" - you can use zt to move the current line to the top with scrolloff lines
"   from the top

" file browsing: a small and simple (in my use) file browser inside vim
let g:netrw_banner=0          " disable annoying banner
let g:netrw_browser_split=4   " open in prior window
let g:netrw_altv=1     " open split to the right
let g:netrw_liststyle=3       " tree view
let g:netrw_list_hide=netrw_gitignore#Hide()
let g:netrw_list_hide.=',\(^\|\s\s\)\zs\.\S\='
" NOW WE CAN
" - :edit a folder to a file file browser
" - <CR>/v/t to open in an h-split/h-split/tab
" - check | netrw-browse-maps| for more examples

" menu to tab complete (and maybe more)
set wildmenu

set autoindent
set number
set numberwidth=1
set ignorecase
set shiftwidth=2
set tabstop=2
set expandtab
set list
set scrolloff=5
" Attempt to determine the type of a file based on its name and possibly its
" contents. Use this to allow intelligent auto-indenting for each filetype,
" and for plugins that are filetype specific.
filetype indent plugin on
" nnoremap c d "
" BeginGuakeMode "
" nnoremap a h "
" nnoremap w k "
" nnoremap s j "
" nnoremap d l "
" EndGuakeMode "

